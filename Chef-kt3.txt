Chef-KT3

What is Test Kitchen?

Test Kitchen is Chefâ€™s integrated testing framework. It is used to automatically test cookbook across any combination of platforms and test suites.


Purpose of the Test Kitchen?

It enables writing test recipes , which will run on the VMs once they are instantiated and converged using the cookbook. The test recipes run on that VM and can verify if everything works as expected. Concepts related are platform, suite, instance, driver and provisioner.


How to use it?

-> Test suites are defined in kitchen.yml. See the configuration documentation for options and syntax information.

-> Supports cookbooks testing across many cloud providers and virtualization technologies.

-> Uses a comprehensive set of operating system base images from chef's Bento project.


What is PolicyFiles?

A Policyfile is an optional way to manage role, environment, and community cookbook data with a single document that is uploaded to the Chef server. The file is associated with a group of nodes, cookbooks, and settings. When these nodes perform a Chef client run, they utilize recipes specified in the Policyfile run-list.


How to use policyfiles?

-> Focus on the workflow of the entire system
-> Safe development workflows
-> Less expensive computation
-> Code visibility
-> Role mutability
-> Cookbook mutability
-> Replaces Berkshlef and the environment


Commands to manage policyfiles

-> chef clean-policy-cookbooks
-> chef clean-policy-revisions
-> chef delete-policy
-> chef delete-policy-group
-> chef diff POLICY_FILE DIRECTORY
-> chef export POLICY_FILE DIRECTORY
-> chef generate policyfile POLICY_NAME
-> chef generate repo REPO_NAME
-> chef install POLICY_FILE
-> chef push POLICY_GROUP POLICY_FILE
-> chef push-archive POLICY_GROUP ARCHIVE_FILE
-> chef show-policy POLICY_NAME POLICY_GROUP
-> chef undelete
-> chef update POLICY_FILE




